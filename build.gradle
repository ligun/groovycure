plugins {
    id 'groovy'
    id 'maven-publish'
    id 'signing'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

archivesBaseName = 'groovycure'
group = 'net.ligun'
mainClassName = 'groovycure.Precure'
version = '1.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation module('org.codehaus.groovy:groovy-all:3.0.8') {
        dependency('org.codehaus.groovy:groovy-dateutil:3.0.8')
        dependency('org.codehaus.groovy:groovy-cli-commons:3.0.8')
    }
    testImplementation 'org.spockframework:spock-core:2.0-groovy-3.0'
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = archivesBaseName
            from components.java
            pom {
                name = archivesBaseName
                description = 'Pretty Cure'
                url = 'https://github.com/ligun/groovycure'
                licenses {
                    license {
                        name = 'Apache License, Version 2.0'
                        url = 'https://opensource.org/licenses/Apache-2.0'
                    }
                }
                developers {
                    developer {
                        id = developperId
                        name = developperName
                        email = developperEmail
                    }
                }
                scm {
                    connection = 'git@github.com:ligun/groovycure.git'
                    developerConnection = 'git@github.com:ligun/groovycure.git'
                    url = 'https://github.com/ligun/groovycure'
                }
                repositories {
                    maven {
                        def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                        def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots"
                        url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                        credentials {
                            username = sonatypeUsername
                            password = sonatypePassword
                        }
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url "file:${buildDir}"
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

run {
    if(project.hasProperty('args')) {
        args project.args.split(/s+/)
    }
}

task makeExecutableJar(type: Jar, dependsOn: shadowJar) {
    manifest {
        attributes 'Main-Class': 'groovycure.Precure'
    }
    doLast {
        def jarshDir = new File("${buildDir}/jarsh")
        jarshDir.mkdir()

        def shell = new File("${jarshDir}/precure")
        def bat = new File("${jarshDir}/precure.bat")
        def jar = new File("${buildDir}/libs/${archivesBaseName}-${version}-all.jar")

        shell.text = """\
#!/bin/sh
java -jar "\$0" "\$@"
exit \$?
"""
        shell << jar.bytes

        bat.text = """\
@echo off
java -jar "%0" %*\r\n\
exit /B 1\r\n\
"""
        bat << jar.bytes
    }
}
